/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedOrNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721Receiver",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "saveTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "saveTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "serApprovalFoAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200277d3803806200277d8339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b6121c080620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146102455780639d737b4f14610263578063c87b56dd1461027f578063e985e9c5146102af576100ea565b806342966c68146101c95780636352211e146101e557806370a0823114610215576100ea565b80631149d467116100c85780631149d4671461015957806323b872dd1461017557806330523b471461019157806340c10f19146101ad576100ea565b806306fdde03146100ef578063081812fc1461010d578063095ea7b31461013d575b600080fd5b6100f76102df565b604051610104919061185f565b60405180910390f35b610127600480360381019061012291906118cb565b610371565b6040516101349190611939565b60405180910390f35b61015760048036038101906101529190611980565b610452565b005b610173600480360381019061016e9190611af5565b6105ef565b005b61018f600480360381019061018a9190611b78565b610601565b005b6101ab60048036038101906101a69190611b78565b6108a6565b005b6101c760048036038101906101c29190611980565b6108c6565b005b6101e360048036038101906101de91906118cb565b610acc565b005b6101ff60048036038101906101fa91906118cb565b610b18565b60405161020c9190611939565b60405180910390f35b61022f600480360381019061022a9190611bcb565b610bf9565b60405161023c9190611c07565b60405180910390f35b61024d610ca7565b60405161025a919061185f565b60405180910390f35b61027d60048036038101906102789190611c5a565b610d39565b005b610299600480360381019061029491906118cb565b610e9b565b6040516102a6919061185f565b60405180910390f35b6102c960048036038101906102c49190611c9a565b610f9e565b6040516102d69190611ce9565b60405180910390f35b6060600080546102ee90611d33565b80601f016020809104026020016040519081016040528092919081815260200182805461031a90611d33565b80156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90611db0565b60405180910390fd5b6004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600061045d82610b18565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415806104a1575061049f8133610f9e565b155b156104d8576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361053d576040517fe6c5704500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6105fb84848484611032565b50505050565b61060b338261131a565b610641576040517f40a5e18800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1661066182610b18565b73ffffffffffffffffffffffffffffffffffffffff16146106ae576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610714576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061079a90611dff565b9190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906107ef90611e28565b9190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6108c183838360405180602001604052806000815250611032565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092c576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109c5576040517fddefae2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610a6790611e28565b9190505550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b610ad6338261131a565b610b0c576040517f40a5e18800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b15816113af565b50565b600081600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb490611db0565b60405180910390fd5b6003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c60576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610cb690611d33565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce290611d33565b8015610d2f5780601f10610d0457610100808354040283529160200191610d2f565b820191906000526020600020905b815481529060010190602001808311610d1257829003601f168201915b5050505050905090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610d9e576040517fe6c5704500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e8f9190611ce9565b60405180910390a35050565b606081600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3790611db0565b60405180910390fd5b6000610f4a6114dd565b90506000815111610f6a5760405180602001604052806000815250610f95565b80610f74856114f4565b604051602001610f85929190611eac565b6040516020818303038152906040525b92505050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61103c338361131a565b611072576040517f40a5e18800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1661109283610b18565b73ffffffffffffffffffffffffffffffffffffffff16146110df576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611145576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906111cb90611dff565b9190505550600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061122090611e28565b9190505550826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112de84848484611654565b611314576040517ff5cd1f5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60008061132683610b18565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061136857506113678185610f9e565b5b806113a657508373ffffffffffffffffffffffffffffffffffffffff1661138e84610371565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b60006113ba82610b18565b90506004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061144290611dff565b91905055506003600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b606060405180602001604052806000815250905090565b60606000820361153b576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061164f565b600082905060005b6000821461156d57808061155690611e28565b915050600a826115669190611eff565b9150611543565b60008167ffffffffffffffff811115611589576115886119ca565b5b6040519080825280601f01601f1916602001820160405280156115bb5781602001600182028036833780820191505090505b5090505b60008514611648576001826115d49190611f30565b9150600a856115e39190611f64565b60306115ef9190611f95565b60f81b81838151811061160557611604611fc9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116419190611eff565b94506115bf565b8093505050505b919050565b6000808473ffffffffffffffffffffffffffffffffffffffff163b11156117c2578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016116b4949392919061204d565b6020604051808303816000875af19250505080156116f057506040513d601f19601f820116820180604052508101906116ed91906120f1565b60015b611772573d8060008114611720576040519150601f19603f3d011682016040523d82523d6000602084013e611725565b606091505b50600081510361176a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117619061216a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506117c7565b600190505b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118095780820151818401526020810190506117ee565b60008484015250505050565b6000601f19601f8301169050919050565b6000611831826117cf565b61183b81856117da565b935061184b8185602086016117eb565b61185481611815565b840191505092915050565b600060208201905081810360008301526118798184611826565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6118a881611895565b81146118b357600080fd5b50565b6000813590506118c58161189f565b92915050565b6000602082840312156118e1576118e061188b565b5b60006118ef848285016118b6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611923826118f8565b9050919050565b61193381611918565b82525050565b600060208201905061194e600083018461192a565b92915050565b61195d81611918565b811461196857600080fd5b50565b60008135905061197a81611954565b92915050565b600080604083850312156119975761199661188b565b5b60006119a58582860161196b565b92505060206119b6858286016118b6565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a0282611815565b810181811067ffffffffffffffff82111715611a2157611a206119ca565b5b80604052505050565b6000611a34611881565b9050611a4082826119f9565b919050565b600067ffffffffffffffff821115611a6057611a5f6119ca565b5b611a6982611815565b9050602081019050919050565b82818337600083830152505050565b6000611a98611a9384611a45565b611a2a565b905082815260208101848484011115611ab457611ab36119c5565b5b611abf848285611a76565b509392505050565b600082601f830112611adc57611adb6119c0565b5b8135611aec848260208601611a85565b91505092915050565b60008060008060808587031215611b0f57611b0e61188b565b5b6000611b1d8782880161196b565b9450506020611b2e8782880161196b565b9350506040611b3f878288016118b6565b925050606085013567ffffffffffffffff811115611b6057611b5f611890565b5b611b6c87828801611ac7565b91505092959194509250565b600080600060608486031215611b9157611b9061188b565b5b6000611b9f8682870161196b565b9350506020611bb08682870161196b565b9250506040611bc1868287016118b6565b9150509250925092565b600060208284031215611be157611be061188b565b5b6000611bef8482850161196b565b91505092915050565b611c0181611895565b82525050565b6000602082019050611c1c6000830184611bf8565b92915050565b60008115159050919050565b611c3781611c22565b8114611c4257600080fd5b50565b600081359050611c5481611c2e565b92915050565b60008060408385031215611c7157611c7061188b565b5b6000611c7f8582860161196b565b9250506020611c9085828601611c45565b9150509250929050565b60008060408385031215611cb157611cb061188b565b5b6000611cbf8582860161196b565b9250506020611cd08582860161196b565b9150509250929050565b611ce381611c22565b82525050565b6000602082019050611cfe6000830184611cda565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d4b57607f821691505b602082108103611d5e57611d5d611d04565b5b50919050565b7f6e6f74206d696e74656400000000000000000000000000000000000000000000600082015250565b6000611d9a600a836117da565b9150611da582611d64565b602082019050919050565b60006020820190508181036000830152611dc981611d8d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e0a82611895565b915060008203611e1d57611e1c611dd0565b5b600182039050919050565b6000611e3382611895565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e6557611e64611dd0565b5b600182019050919050565b600081905092915050565b6000611e86826117cf565b611e908185611e70565b9350611ea08185602086016117eb565b80840191505092915050565b6000611eb88285611e7b565b9150611ec48284611e7b565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f0a82611895565b9150611f1583611895565b925082611f2557611f24611ed0565b5b828204905092915050565b6000611f3b82611895565b9150611f4683611895565b9250828203905081811115611f5e57611f5d611dd0565b5b92915050565b6000611f6f82611895565b9150611f7a83611895565b925082611f8a57611f89611ed0565b5b828206905092915050565b6000611fa082611895565b9150611fab83611895565b9250828201905080821115611fc357611fc2611dd0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061201f82611ff8565b6120298185612003565b93506120398185602086016117eb565b61204281611815565b840191505092915050565b6000608082019050612062600083018761192a565b61206f602083018661192a565b61207c6040830185611bf8565b818103606083015261208e8184612014565b905095945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120ce81612099565b81146120d957600080fd5b50565b6000815190506120eb816120c5565b92915050565b6000602082840312156121075761210661188b565b5b6000612115848285016120dc565b91505092915050565b7f5472616e7366657220746f206e6f6e2045524337323120726563656976657200600082015250565b6000612154601f836117da565b915061215f8261211e565b602082019050919050565b6000602082019050818103600083015261218381612147565b905091905056fea2646970667358221220461ff6836bd6b2792256378e487adb911c5b76197de0fd0c9ab6df40a42e98e664736f6c63430008140033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
