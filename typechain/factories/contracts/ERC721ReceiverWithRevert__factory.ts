/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721ReceiverWithRevert,
  ERC721ReceiverWithRevertInterface,
} from "../../contracts/ERC721ReceiverWithRevert";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610370806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a600480360381019061004591906101df565b610060565b60405161005791906102a2565b60405180910390f35b600061007667819aeb353d12b50f60c01b6100d9565b61008a67e267f93d56feb4b560c01b6100d9565b61009e67bb94efa3e487554960c01b6100d9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d09061031a565b60405180910390fd5b50565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610111826100e6565b9050919050565b61012181610106565b811461012c57600080fd5b50565b60008135905061013e81610118565b92915050565b6000819050919050565b61015781610144565b811461016257600080fd5b50565b6000813590506101748161014e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261019f5761019e61017a565b5b8235905067ffffffffffffffff8111156101bc576101bb61017f565b5b6020830191508360018202830111156101d8576101d7610184565b5b9250929050565b6000806000806000608086880312156101fb576101fa6100dc565b5b60006102098882890161012f565b955050602061021a8882890161012f565b945050604061022b88828901610165565b935050606086013567ffffffffffffffff81111561024c5761024b6100e1565b5b61025888828901610189565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61029c81610267565b82525050565b60006020820190506102b76000830184610293565b92915050565b600082825260208201905092915050565b7f5265636569766572207265766572747300000000000000000000000000000000600082015250565b60006103046010836102bd565b915061030f826102ce565b602082019050919050565b60006020820190508181036000830152610333816102f7565b905091905056fea26469706673582212205af58a037ebdbaae2b4f3b6b730d073bfc4add6d29738bacd4ecaf2893eb43fd64736f6c63430008140033";

type ERC721ReceiverWithRevertConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ReceiverWithRevertConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ReceiverWithRevert__factory extends ContractFactory {
  constructor(...args: ERC721ReceiverWithRevertConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ReceiverWithRevert> {
    return super.deploy(overrides || {}) as Promise<ERC721ReceiverWithRevert>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721ReceiverWithRevert {
    return super.attach(address) as ERC721ReceiverWithRevert;
  }
  override connect(signer: Signer): ERC721ReceiverWithRevert__factory {
    return super.connect(signer) as ERC721ReceiverWithRevert__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ReceiverWithRevertInterface {
    return new utils.Interface(_abi) as ERC721ReceiverWithRevertInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ReceiverWithRevert {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721ReceiverWithRevert;
  }
}
